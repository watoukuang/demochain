worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout 65;

    # 错误页面配置
    error_page 500 502 503 504 /50x.html;

    # ================================
    # demochain.org - 静态网站
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name demochain.org www.demochain.org;
        return 301 https://$host$request_uri;
    }

    # HTTPS 静态文件服务
    server {
        listen 443 ssl;
        server_name demochain.org www.demochain.org;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/demochain.org.pem;
        ssl_certificate_key /usr/local/web/cert/demochain.org.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;
        
        location / {
            root /usr/local/web/demochain.org/dist;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
    }

    # ================================
    # watoukuang.com - 代理服务
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name watoukuang.com www.watoukuang.com;
        return 301 https://$host$request_uri;
    }

    # HTTPS 代理服务
    server {
        listen 443 ssl;
        server_name watoukuang.com www.watoukuang.com;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/watoukuang.com.pem;
        ssl_certificate_key /usr/local/web/cert/watoukuang.com.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass http://10.15.69.2:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ================================
    # wstool.org - 代理服务
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name wstool.org www.wstool.org;
        return 301 https://$host$request_uri;
    }

    # HTTPS 代理服务
    server {
        listen 443 ssl;
        server_name wstool.org www.wstool.org;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/wstool.org.pem;
        ssl_certificate_key /usr/local/web/cert/wstool.org.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass http://10.15.69.2:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ================================
    # apitool.org - 代理服务
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name apitool.org www.apitool.org;
        return 301 https://$host$request_uri;
    }

    # HTTPS 代理服务
    server {
        listen 443 ssl;
        server_name apitool.org www.apitool.org;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/apitool.org.pem;
        ssl_certificate_key /usr/local/web/cert/apitool.org.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass http://10.15.69.2:3002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ================================
    # svghub.org - 代理服务
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name svghub.org www.svghub.org;
        return 301 https://$host$request_uri;
    }

    # HTTPS 代理服务
    server {
        listen 443 ssl;
        server_name svghub.org www.svghub.org;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/svghub.org.pem;
        ssl_certificate_key /usr/local/web/cert/svghub.org.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass http://10.15.69.2:3003;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # ================================
    # testdefi.org - 代理服务
    # ================================
    
    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name testdefi.org www.testdefi.org;
        return 301 https://$host$request_uri;
    }

    # HTTPS 代理服务
    server {
        listen 443 ssl;
        server_name testdefi.org www.testdefi.org;

        # SSL 配置
        ssl_certificate     /usr/local/web/cert/testdefi.org.pem;
        ssl_certificate_key /usr/local/web/cert/testdefi.org.key;
        ssl_session_timeout 5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        charset utf-8;

        location / {
            proxy_pass http://10.15.69.2:3004;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
